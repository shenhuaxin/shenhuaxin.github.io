<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://shenhuaxin.github.io/</id><title>渡边</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2025-06-26T11:26:17+00:00</updated> <author> <name>shenhuaxin</name> <uri>https://shenhuaxin.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://shenhuaxin.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://shenhuaxin.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2025 shenhuaxin </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>java 调用 python</title><link href="https://shenhuaxin.github.io/posts/py4j/" rel="alternate" type="text/html" title="java 调用 python" /><published>2025-06-12T00:00:00+00:00</published> <updated>2025-06-17T14:29:24+00:00</updated> <id>https://shenhuaxin.github.io/posts/py4j/</id> <content src="https://shenhuaxin.github.io/posts/py4j/" /> <author> <name>渡边</name> </author> <category term="java" /> <summary> 需求 最近碰到 “需要在 java 中执行 python 代码片段” 的需求。调研了几种方案。 Jython 、Py4j 、jep 、pemja 最后选取了 Py4j 方案。 实现方案 java端开发 在 springboot 启动时，创建 GatewayServer，然后将和 python 交互的类保存下来。 @Slf4j @Component public class Py4jServer implements ApplicationListener&amp;lt;ApplicationStartedEvent&amp;gt; { @Override public void onApplicationEvent(ApplicationStartedEvent event) { try { GatewayServer server = new GatewaySe... </summary> </entry> <entry><title>arthas生成火焰图优化性能</title><link href="https://shenhuaxin.github.io/posts/arthas-profiler/" rel="alternate" type="text/html" title="arthas生成火焰图优化性能" /><published>2025-03-12T00:00:00+00:00</published> <updated>2025-03-12T00:00:00+00:00</updated> <id>https://shenhuaxin.github.io/posts/arthas-profiler/</id> <content src="https://shenhuaxin.github.io/posts/arthas-profiler/" /> <author> <name>渡边</name> </author> <category term="java" /> <summary> 需求 最近碰到一个集合循环，程序执行偏慢的场景，需要进行排查。 代码案例 public static void main(String[] args) throws InterruptedException { String data = FileUtil.readString("/Users/test/Downloads/测试.json", Charset.defaultCharset()); JSONObject bigObj = JSONUtil.parseObj(data); for (int i = 0; ; i++) { String dataStr = JSONUtil.toJsonStr(bigObj); log.info("dataStr:{}", dataSt... </summary> </entry> <entry><title>docker https 接口访问不通</title><link href="https://shenhuaxin.github.io/posts/docker-mtu/" rel="alternate" type="text/html" title="docker https 接口访问不通" /><published>2023-02-13T00:00:00+00:00</published> <updated>2025-06-17T14:10:16+00:00</updated> <id>https://shenhuaxin.github.io/posts/docker-mtu/</id> <content src="https://shenhuaxin.github.io/posts/docker-mtu/" /> <author> <name>渡边</name> </author> <category term="docker" /> <summary> 问题 在容器中访问 https 接口不通，但是宿主机上访问是通的。通过 curl -v 再次访问，发现是握手失败。 经过查阅，发现是 docker 的 mtu 设置的问题，在宿主机上的 mtu 为 1450， 但是在容器中是 1500。 如果docker的网卡mtu大于宿主机的网卡mtu，在大数据包传输时可能会丢失数据。这也是造成了通信到一半就中断的原因。 解决方法： 在 daemon.json 中设置 mtu { "mtu": 1450 } 注： 如果有 live-restore: true 那么可能导致 docker 容器未重启，那么 docker0 的 mtu 一直未能变更，删除改配置后有效。 </summary> </entry> <entry><title>使用 git module 集成前后端项目</title><link href="https://shenhuaxin.github.io/posts/gitmodule/" rel="alternate" type="text/html" title="使用 git module 集成前后端项目" /><published>2023-01-12T00:00:00+00:00</published> <updated>2023-01-12T00:00:00+00:00</updated> <id>https://shenhuaxin.github.io/posts/gitmodule/</id> <content src="https://shenhuaxin.github.io/posts/gitmodule/" /> <author> <name>渡边</name> </author> <category term="git" /> <summary> 需求 最近有个项目需要在流水线中集成前后端项目一起部署 使用流水线部署时，怎么同时拉取前后端项目，避免本地打包前端项目放到后端项目中。 解决 研究后发现使用 gitmodules 特别好处理这个问题。 在后端项目中，使用以下命令将前端项目添加进后端项目的子模块中。 git submodule add https://codeup.aliyun.com/xxxx.git xxxx 本地也会生成一个 .gitmodules 文件，可以在该文件中添加 branch = dev ，设置子模块的分支。 [submodule "xxxx"] path = xxxx url = https://codeup.aliyun.com/xxxx.git branch = dev 也可以使用以下命令设置分支 git config -f .gitmodules submodu... </summary> </entry> <entry><title>记录一次Java应用Hang住的问题</title><link href="https://shenhuaxin.github.io/posts/java-hang/" rel="alternate" type="text/html" title="记录一次Java应用Hang住的问题" /><published>2022-05-28T00:00:00+00:00</published> <updated>2022-05-31T12:36:44+00:00</updated> <id>https://shenhuaxin.github.io/posts/java-hang/</id> <content src="https://shenhuaxin.github.io/posts/java-hang/" /> <author> <name>渡边</name> </author> <category term="java" /> <summary> 问题 运维新建了一个灰度集群，当他们在部署第一个应用时， 应用启动后Hang住，无法向下执行。日志也不再打印。当时将几个远端的连接地址给telnet过，发现都正常。 而且CPU使用率低。 这时候就使用到了 jstack 命令，打印java线程执行情况。 我们可以看到 main 线程还是 RUNNABLE 状态，当时第一时间也没怀疑是 MySQL 的问题，毕竟 telnet MySQL 时，网络是通的。但是我也找不到其他的问题。就将 jar 放到了其他的服务器上进行执行。发现是正常运行。 这啥时候就开始怀疑新的集群机器有问题了。再结合上 jstack 中的日志。开始怀疑可能是 MySQL 的网络问题。 然后就加上了jdbcUrl中加入 connectionTimout 的配置，但是应用还是 hang 住。再加上了 socketTimeout , 启动后就报错了。这时候找到 DB... </summary> </entry> </feed>
